import request from "supertest";
import app from "../src/app";

describe("POST /lots/ph", () => {
  it("Should return a error (invalid lotId)", async () => {
    const res = await request(app).post("/lots/ph").send({
      lotId: "abc",
      userId: 1,
      range: "Week",
    });

    expect(res.status).toBe(400);
    expect(res.body.error).toBe("Missing required fields");
  });
});

describe("POST /lots/ph", () => {
  it("Should return a error (invalid userId)", async () => {
    const res = await request(app).post("/lots/ph").send({
      lotId: 2,
      userId: "abd",
      range: "Week",
    });

    expect(res.status).toBe(400);
    expect(res.body.error).toBe("Missing required fields");
  });
});

describe("POST /lots/ph", () => {
  it("Should return a error (invalid range)", async () => {
    const res = await request(app).post("/lots/ph").send({
      lotId: 2,
      userId: "abd",
      range: null,
    });

    expect(res.status).toBe(400);
    expect(res.body.error).toBe("Missing required fields");
  });
});

describe("POST /lots/ph", () => {
  it("Should return a error (data not found)", async () => {
    const res = await request(app).post("/lots/ph").send({
      lotId: 2,
      userId: 10,
      range: "Week",
    });

    expect(res.status).toBe(200);
    expect(res.body.phData).toBeDefined();
  });
});

describe("POST /lots/ph", () => {
  it("Should return a success", async () => {
    const res = await request(app).post("/lots/ph").send({
      lotId: 2,
      userId: 2,
      range: "Week",
    });

    expect(res.status).toBe(200);
    expect(res.body.message).toBe("pH data get successfully");
    expect(res.body.phData).toBeDefined();
  });
});
