-- USERS TABLE
CREATE TABLE USERS (
  userId INT AUTO_INCREMENT PRIMARY KEY,
  email VARCHAR(150) NOT NULL UNIQUE,
  password VARCHAR(255) NOT NULL,
  role ENUM('Owner', 'Assistant', 'Developer') DEFAULT 'Assistant',
  fName VARCHAR(30) NOT NULL,
  lName VARCHAR(30),
  profilePic VARCHAR(512),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- AUTH TABLE
CREATE TABLE AUTH (
  id INT AUTO_INCREMENT PRIMARY KEY,
  userId INT NOT NULL,
  resetToken VARCHAR(255) NOT NULL,
  resetTokenExpiration BIGINT NOT NULL,  
  createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (userId) REFERENCES USERS(userId) ON DELETE CASCADE
);

-- ESTATES TABLE
CREATE TABLE ESTATES (
  estateId INT AUTO_INCREMENT PRIMARY KEY,
  estate VARCHAR(100) NOT NULL,
  address VARCHAR(255) NOT NULL,
  managerId INT NOT NULL,
  image VARCHAR(512),
  lat DECIMAL(18, 15) NOT NULL,
  lng DECIMAL(18, 15) NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (managerId) REFERENCES USERS(userId)
);

-- EMPLOYEES TABLE
CREATE TABLE EMPLOYEES (
  estateId INT NOT NULL,
  employeeId INT NOT NULL,
  PRIMARY KEY (estateId, employeeId),
  FOREIGN KEY (estateId) REFERENCES ESTATES(estateId) ON DELETE CASCADE,
  FOREIGN KEY (employeeId) REFERENCES USERS(userId) ON DELETE CASCADE
);

-- LOTS TABLE
CREATE TABLE LOTS (
  lotId INT AUTO_INCREMENT PRIMARY KEY,
  lot VARCHAR(30) NOT NULL,
  estateId INT NOT NULL,
  lat DECIMAL(18, 15) NOT NULL,
  lng DECIMAL(18, 15) NOT NULL,
  createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (estateId) REFERENCES ESTATES(estateId) ON DELETE CASCADE
);

-- SENSOR NODES TABLE
CREATE TABLE NODES (
  nodeId INT AUTO_INCREMENT PRIMARY KEY,
  node VARCHAR(30) UNIQUE NOT NULL,
  lotId INT NOT NULL,
  lat DECIMAL(18, 15) NOT NULL,
  lng DECIMAL(18, 15) NOT NULL,
  installedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (lotId) REFERENCES LOTS(lotId) ON DELETE CASCADE
);

-- SENSOR READINGS TABLE
CREATE TABLE SENSOR_READINGS (
  readingId BIGINT AUTO_INCREMENT PRIMARY KEY,
  nodeId INT NOT NULL,
  timestamp DATETIME NOT NULL,
  temperature DECIMAL(5,2),
  humidity DECIMAL(5,2),
  ph DECIMAL(4,2),
  n DECIMAL(5,2),
  p DECIMAL(5,2),
  k DECIMAL(5,2),
  battery INT NOT NULL DEFAULT 100,
  FOREIGN KEY (nodeId) REFERENCES NODES(nodeId) ON DELETE CASCADE
);

-- LOT IMAGES TABLE
CREATE TABLE LOT_IMAGES (
  imageId BIGINT AUTO_INCREMENT PRIMARY KEY,
  nodeId INT NOT NULL,
  url VARCHAR(255) NOT NULL,
  uploadedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (nodeId) REFERENCES NODES(nodeId) ON DELETE CASCADE
);

-- DRONES TABLE
CREATE TABLE DRONES (
  droneId INT AUTO_INCREMENT PRIMARY KEY,
  estateId INT NOT NULL,
  type ENUM('Monitoring', 'Fertilizing') DEFAULT 'Monitoring' NOT NULL,
  model VARCHAR(100),
  serialNumber VARCHAR(100) UNIQUE,
  status ENUM('Active', 'Available', 'Removed', 'Maintenance') DEFAULT 'Available',
  purchaseDate DATE,
  description TEXT,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (estateId) REFERENCES ESTATES(estateId) ON DELETE CASCADE
);


-- TASKS TABLE
CREATE TABLE TASKS (
  taskId INT AUTO_INCREMENT PRIMARY KEY,
  task VARCHAR(50) NOT NULL,
  dueDate DATE NOT NULL,
  dueTime TIME NOT NULL,
  tag ENUM('Monitoring', 'Fertilizing', 'Memo') DEFAULT 'Memo',
  lots JSON NOT NULL,
  status ENUM('Pending', 'InProgress', 'Completed') DEFAULT 'Pending',
  estateId INT NOT NULL,
  userId INT NOT NULL,
  createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (estateId) REFERENCES ESTATES(estateId) ON DELETE CASCADE
);


-- DRONE STATUS TABLE
CREATE TABLE DRONE_STATUS (
  droneId INT NOT NULL PRIMARY KEY,
  lat DECIMAL(18, 15) NOT NULL,
  lng DECIMAL(18, 15) NOT NULL,
  battery INT NOT NULL, -- percentage (0 - 100)
  signalStrength INT NOT NULL, -- percentage (0 - 100)
  altitude FLOAT, -- meters
  speed FLOAT,    -- meters/second
  lastUpdate TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);


-- NOTIFICATIONS TABLE
CREATE TABLE NOTIFICATIONS (
  msgId INT AUTO_INCREMENT PRIMARY KEY,
  userId INT NOT NULL,
  title VARCHAR(100) NOT NULL,
  message TEXT NOT NULL,
  type ENUM('Task', 'Drone', 'Sensor', 'Image', 'System') DEFAULT 'System',
  isRead BOOLEAN DEFAULT FALSE,
  createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (userId) REFERENCES USERS(userId) ON DELETE CASCADE
);


